% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/question_eval.R
\name{question_mathexpression}
\alias{question_mathexpression}
\title{Quiz question that allows to provide an answer with a simple mathematical expression
that is being evaluated and checked against `expected_result`.}
\usage{
question_mathexpression(
  text,
  expected_result,
  allowed_chars = "0123456789\\\\.\\\\+\\\\*/\\\\(\\\\)\\\\^-",
  allowed_max_length = 128,
  tolerance = 1e-04,
  min_value = NULL,
  max_value = NULL,
  rm_percentage_symbol = FALSE,
  correct = "Correct!",
  correct_repeat_result = FALSE,
  incorrect = "Incorrect",
  incorrect_too_long = "The provided answer is too long.",
  incorrect_invalid_chars =
    "The provided answer contains invalid characters. Only the following characters are possible: ",
  incorrect_out_of_range =
    "The result is expected to be between \%f and \%f, but your answer is \%f.",
  incorrect_out_of_range_min =
    "The result is expected to be \%f or greater, but your answer is \%f.",
  incorrect_out_of_range_max =
    "The result is expected to be \%f or smaller, but your answer is \%f.",
  placeholder = "Enter a mathematical expression or number ...",
  trim = TRUE,
  ...
)
}
\arguments{
\item{text}{Question or option text}

\item{expected_result}{expected result (numeric)}

\item{allowed_chars}{allowed characters in user input}

\item{allowed_max_length}{allowed max. number of characters in user input}

\item{tolerance}{maximum absolute difference between user's result and expected result}

\item{min_value}{optional maximum value for user input}

\item{rm_percentage_symbol}{if TRUE, remove all "%" from user's input}

\item{correct}{For \code{question}, text to print for a correct answer (defaults
to "Correct!"). For \code{answer}, a boolean indicating whether this answer is
correct.}

\item{correct_repeat_result}{either logical or a printf format string; if TRUE or string, repeat the correct result}

\item{incorrect}{Text to print for an incorrect answer (defaults to
"Incorrect") when \code{allow_retry} is \code{FALSE}.}

\item{incorrect_too_long}{message when the input is too long}

\item{incorrect_invalid_chars}{message when the input contains invalid characters}

\item{incorrect_out_of_range}{message when the evaluated input is outside the [min_value, max_value] range}

\item{incorrect_out_of_range_min}{message when the evaluated input is smaller than `min_value`}

\item{incorrect_out_of_range_max}{message when the evaluated input is greater than `max_value`}

\item{placeholder}{A character string giving the user a hint as to what can
be entered into the control. Internet Explorer 8 and 9 do not support this
option.}

\item{trim}{Logical to determine if whitespace before and after the answer
should be removed.  Defaults to \code{TRUE}.}

\item{...}{Answers created with \code{\link[learnr:answer]{answer()}} or \code{\link[learnr:answer_fn]{answer_fn()}}, or extra
parameters passed onto \code{\link[learnr:question]{question()}}. Answers with custom function checking}
}
\description{
Quiz question that allows to provide an answer with a simple mathematical expression
that is being evaluated and checked against `expected_result`.
}
