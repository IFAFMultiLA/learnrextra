% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/question_eval.R
\name{question_mathexpression}
\alias{question_mathexpression}
\alias{question_mathexpression_probability}
\alias{question_mathexpression_percentage}
\title{Quiz questions accepting mathematical expressions}
\usage{
question_mathexpression(
  text,
  expected_result,
  allowed_chars = "0123456789\\\\.\\\\+\\\\*/\\\\(\\\\)\\\\^-",
  allowed_max_length = 128,
  tolerance = 1e-04,
  min_value = NULL,
  max_value = NULL,
  handle_comma_in_input = FALSE,
  rm_percentage_symbol = FALSE,
  correct = "Correct!",
  correct_repeat_result = FALSE,
  incorrect = "Incorrect",
  incorrect_too_long = "The provided answer is too long.",
  incorrect_invalid_chars =
    "The provided answer contains invalid characters. Only the following characters are possible: ",
  incorrect_cannot_evaluate =
    "Your answer cannot be evaluated as mathematical expression.",
  incorrect_out_of_range =
    "The result is expected to be between \%f and \%f, but your answer is \%f.",
  incorrect_out_of_range_min =
    "The result is expected to be \%f or greater, but your answer is \%f.",
  incorrect_out_of_range_max =
    "The result is expected to be \%f or smaller, but your answer is \%f.",
  placeholder = "Enter a mathematical expression or number ...",
  trim = TRUE,
  ...
)

question_mathexpression_probability(
  text,
  expected_result,
  placeholder = "Enter a mathematical expression that evaluates to a probability ...",
  ...
)

question_mathexpression_percentage(
  text,
  expected_result,
  placeholder = "Enter a mathematical expression that evaluates to a percentage ...",
  ...
)
}
\arguments{
\item{text}{Question or option text}

\item{expected_result}{Expected result (numeric).}

\item{allowed_chars}{Allowed characters in user input.}

\item{allowed_max_length}{Allowed max. number of characters in user input.}

\item{tolerance}{Maximum absolute difference between user's result and expected result.}

\item{min_value}{Optional minimum value for user input.}

\item{max_value}{Optional maximum value for user input.}

\item{handle_comma_in_input}{Options to handle commas in input (important for languages where comma is used for
decimal point). \code{FALSE}: No special behavior (will trigger \code{incorrect_invalid_chars}
message); \code{TRUE}: Replace comma by decimal point; character string: message to display
when input contains a comma.}

\item{rm_percentage_symbol}{If TRUE, remove all "\%" from user's input.}

\item{correct}{For \code{question}, text to print for a correct answer (defaults
to "Correct!"). For \code{answer}, a boolean indicating whether this answer is
correct.}

\item{correct_repeat_result}{Either logical or a printf format string; if TRUE or string, repeat the correct result.}

\item{incorrect}{Text to print for an incorrect answer (defaults to
"Incorrect") when \code{allow_retry} is \code{FALSE}.}

\item{incorrect_too_long}{Message when the input is too long.}

\item{incorrect_invalid_chars}{Message when the input contains invalid characters.}

\item{incorrect_cannot_evaluate}{Message when the input cannot be evaluated.}

\item{incorrect_out_of_range}{Message when the evaluated input is outside the \verb{[min_value, max_value]} range.}

\item{incorrect_out_of_range_min}{Message when the evaluated input is smaller than \code{min_value}.}

\item{incorrect_out_of_range_max}{Message when the evaluated input is greater than \code{max_value}.}

\item{placeholder}{A character string giving the user a hint as to what can
be entered into the control. Internet Explorer 8 and 9 do not support this
option.}

\item{trim}{Logical to determine if whitespace before and after the answer
should be removed.  Defaults to \code{TRUE}.}

\item{...}{Answers created with \code{\link[learnr:answer]{answer()}} or \code{\link[learnr:answer_fn]{answer_fn()}}, or extra
parameters passed onto \code{\link[learnr:question]{question()}}. Answers with custom function checking}
}
\value{
Returns a learnr question of type \code{"learnr_text"}.
}
\description{
Create a quiz question that allows to provide an answer with a simple mathematical expression
that is being evaluated and checked against \code{expected_result}.
}
\details{
By default, only summation, difference, multiplication, division and power operators are allowed, along with
parentheses. This can be controlled via \code{allowed_chars}. The default behavior allows users to provide answers
like \code{3 * 1.14 + 1/(2^3)} being evaluated and check against the correct result. At the same time, this prevents
possible security issues as it is not possible to call any R functions besides the mentioned algebraic operators.

When expecting the input to be a probability, you can use \code{question_mathexpression_probability}. This function
additional checks for the entered result being in range \eqn{[0, 1]} and gives respective hints if not.
The function \code{question_mathexpression_percentage()} also allows users to use the "\%" character in the input.
}
\examples{
question_mathexpression(
    "What's the sum of the first 5 natural numbers?",
    15
)

question_mathexpression_probability(
    "What's the probability of getting two times \"head\" when flipping a fair coin twice?",
    1/4
)

question_mathexpression_percentage(
    "What's the probability of getting two times \"head\" when flipping a fair coin twice? Give the answer in per cent.",
    25,
    min_value = 0,
    max_value = 100
)


}
